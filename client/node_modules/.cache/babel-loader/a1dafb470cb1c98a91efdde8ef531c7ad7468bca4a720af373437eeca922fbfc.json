{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex flex-row\"\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_app_bookmark_list = _resolveComponent(\"app-bookmark-list\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_AppHeader), _createElementVNode(\"div\", _hoisted_1, [_createVNode($setup[\"Sidebar\"], {\n    onCategoryChanged: $setup.updateBookmarkList\n  }), $setup.bookmarkList.length > 0 ? (_openBlock(), _createBlock(_component_app_bookmark_list, {\n    key: 0,\n    items: $setup.bookmarkList\n  }, null, 8 /* PROPS */, [\"items\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Bookmark bulunmamaktadır..\"))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_1","$setup","onCategoryChanged","updateBookmarkList","bookmarkList","length","_createBlock","_component_app_bookmark_list","items","_createElementBlock","_hoisted_2"],"sources":["C:\\Users\\Emirhan Sevim\\Desktop\\vue-proje\\booklike-composition\\client\\src\\views\\Home.vue"],"sourcesContent":["<template>\r\n  <AppHeader />\r\n  <div class=\"flex flex-row\">\r\n    <Sidebar @category-changed=\"updateBookmarkList\" />\r\n    <app-bookmark-list v-if=\"bookmarkList.length > 0\" :items=\"bookmarkList\" />\r\n    <div v-else>Bookmark bulunmamaktadır..</div>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport Sidebar from \"@/components/Home/SideBar\";\r\nimport { ref, onMounted, inject } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nconst appAxios = inject(\"appAxios\");\r\nconst socket = inject(\"socket\");\r\nconst bookmarkList = ref([]);\r\nconst store = useStore();\r\n\r\nonMounted(() => {\r\n  socket.on(\"NEW_BOOKMARK_ADDED\", bookmark => {\r\n    bookmarkList.value.push(bookmark);\r\n  });\r\n});\r\n\r\nconst fetchData = () => {\r\n  appAxios.get(\"/bookmarks?_expand=category&_expand=user\").then(bookmark_list_response => {\r\n    bookmarkList.value = bookmark_list_response?.data || [];\r\n  });\r\n  //! Bookmark olarak eklediklerimizi çekmek için user_bookmarks üzerinden çekelim..\r\n  appAxios.get(\"/user_bookmarks/?_expand=bookmark&_expand=user\").then(user_bookmark_response => {\r\n    store.commit(\"setBookmarks\", user_bookmark_response?.data);\r\n  });\r\n\r\n  //! Like olarak eklediklerimizi çekmek için user_likes üzerinden çekelim..\r\n  appAxios.get(\"/user_likes/?_expand=bookmark&_expand=user\").then(user_likes_response => {\r\n    store.commit(\"setLikes\", user_likes_response?.data);\r\n  });\r\n};\r\nconst updateBookmarkList = categoryId => {\r\n  const url = categoryId ? `/bookmarks?_expand=category&_expand=user&categoryId=${categoryId}` : `/bookmarks?_expand=category&_expand=user`;\r\n  appAxios.get(url).then(bookmark_list_response => {\r\n    bookmarkList.value = bookmark_list_response?.data || [];\r\n  });\r\n};\r\n\r\nfetchData();\r\n</script>"],"mappings":";;EAEOA,KAAK,EAAC;AAAe;;;;;;;6DAD1BC,YAAA,CAAaC,oBAAA,GACbC,mBAAA,CAIM,OAJNC,UAIM,GAHJH,YAAA,CAAkDI,MAAA;IAAxCC,iBAAgB,EAAED,MAAA,CAAAE;EAAkB,IACrBF,MAAA,CAAAG,YAAY,CAACC,MAAM,Q,cAA5CC,YAAA,CAA0EC,4BAAA;;IAAvBC,KAAK,EAAEP,MAAA,CAAAG;uDAC1DK,mBAAA,CAA4C,OAAAC,UAAA,EAAhC,4BAA0B,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}